using System;

//crearemos un programa para gestionar el registro de vehículos utilizando listas enlazadas. 
//Se podrán realizar varias operaciones como agregar, buscar, ver por año, eliminar, etc.

// Clase Nodo que representa un vehículo
public class NodoVehiculo
{
    public string Placa;
    public string Marca;
    public string Modelo;
    public int Anio;
    public decimal Precio;
    public NodoVehiculo Siguiente;

    public NodoVehiculo(string placa, string marca, string modelo, int anio, decimal precio)
    {
        Placa = placa;
        Marca = marca;
        Modelo = modelo;
        Año = año;
        Precio = precio;
        Siguiente = null;
    }
}

// Clase ListaEnlazada para gestionar los vehículos
public class ListaVehiculos
{
    private NodoVehiculo cabeza;

    // Método para agregar un nuevo vehículo
    public void AgregarVehiculo(string placa, string marca, string modelo, int año, decimal precio)
    {
        NodoVehiculo nuevoVehiculo = new NodoVehiculo(placa, marca, modelo, año, precio);
        if (cabeza == null)
        {
            cabeza = nuevoVehiculo; // Si la lista está vacía, el nuevo vehículo es la cabeza
        }
        else
        {
            NodoVehiculo actual = cabeza;
            while (actual.Siguiente != null)
            {
                actual = actual.Siguiente; // Navegar hasta el final
            }
            actual.Siguiente = nuevoVehiculo; // Enlazar el nuevo vehículo
        }
    }

    // Método para buscar un vehículo por placa
    public NodoVehiculo BuscarVehiculo(string placa)
    {
        NodoVehiculo actual = cabeza;
        while (actual != null)
        {
            if (actual.Placa.Equals(placa, StringComparison.OrdinalIgnoreCase))
            {
                return actual; // Retornar el vehículo encontrado
            }
            actual = actual.Siguiente;
        }
        return null; // Retornar null si no se encuentra
    }

    // Método para ver vehículos por año
    public void VerVehiculosPorAño(int año)
    {
        NodoVehiculo actual = cabeza;
        Console.WriteLine($"Vehículos del año {año}:");
        while (actual != null)
        {
            if (actual.Año == año)
            {
                Console.WriteLine($"Placa: {actual.Placa}, Marca: {actual.Marca}, Modelo: {actual.Modelo}, Precio: {actual.Precio}");
            }
            actual = actual.Siguiente;
        }
    }

    // Método para mostrar todos los vehículos
    public void MostrarTodosLosVehiculos()
    {
        NodoVehiculo actual = cabeza;
        Console.WriteLine("Todos los vehículos registrados:");
        while (actual != null)
        {
            Console.WriteLine($"Placa: {actual.Placa}, Marca: {actual.Marca}, Modelo: {actual.Modelo}, Año: {actual.Año}, Precio: {actual.Precio}");
            actual = actual.Siguiente;
        }
    }

    // Método para eliminar un vehículo por placa
    public void EliminarVehiculo(string placa)
    {
        NodoVehiculo actual = cabeza;
        NodoVehiculo anterior = null;

        while (actual != null)
        {
            if (actual.Placa.Equals(placa, StringComparison.OrdinalIgnoreCase))
            {
                if (anterior == null)
                {
                    cabeza = actual.Siguiente; // Eliminando la cabeza
                }
                else
                {
                    anterior.Siguiente = actual.Siguiente; // Enlazando el anterior con el siguiente
                }
                Console.WriteLine($"Vehículo con placa {placa} eliminado.");
                return;
            }
            anterior = actual;
            actual = actual.Siguiente;
        }
        Console.WriteLine($"Vehículo con placa {placa} no encontrado.");
    }
}

class Program
{
    static void Main()
    {
        ListaVehiculos listaVehiculos = new ListaVehiculos();
        int opcion;

        do
        {
            Console.WriteLine("\nMenu:");
            Console.WriteLine("1. Agregar vehículo");
            Console.WriteLine("2. Buscar vehículo por placa");
            Console.WriteLine("3. Ver vehículos por año");
            Console.WriteLine("4. Ver todos los vehículos registrados");
            Console.WriteLine("5. Eliminar vehículo registrado");
            Console.WriteLine("6. Salir");
            Console.Write("Seleccione una opción: ");
            opcion = int.Parse(Console.ReadLine());

            switch (opcion)
            {
                case 1:
                    Console.Write("Ingrese placa: ");
                    string placa = Console.ReadLine();
                    Console.Write("Ingrese marca: ");
                    string marca = Console.ReadLine();
                    Console.Write("Ingrese modelo: ");
                    string modelo = Console.ReadLine();
                    Console.Write("Ingrese año: ");
                    int año = int.Parse(Console.ReadLine());
                    Console.Write("Ingrese precio: ");
                    decimal precio = decimal.Parse(Console.ReadLine());
                    listaVehiculos.AgregarVehiculo(placa, marca, modelo, año, precio);
                    break;

                case 2:
                    Console.Write("Ingrese placa a buscar: ");
                    string placaBuscar = Console.ReadLine();
                    var vehiculoEncontrado = listaVehiculos.BuscarVehiculo(placaBuscar);
                    if (vehiculoEncontrado != null)
                    {
                        Console.WriteLine($"Vehículo encontrado: Placa: {vehiculoEncontrado.Placa}, Marca: {vehiculoEncontrado.Marca}, Modelo: {vehiculoEncontrado.Modelo}, Año: {vehiculoEncontrado.Año}, Precio: {vehiculoEncontrado.Precio}");
                    }
                    else
                    {
                        Console.WriteLine("Vehículo no encontrado.");
                    }
                    break;

                case 3:
                    Console.Write("Ingrese año a buscar: ");
                    int añoBuscar = int.Parse(Console.ReadLine());
                    listaVehiculos.VerVehiculosPorAño(añoBuscar);
                    break;

                case 4:
                    listaVehiculos.MostrarTodosLosVehiculos();
                    break;

                case 5:
                    Console.Write("Ingrese placa a eliminar: ");
                    string placaEliminar = Console.ReadLine();
                    listaVehiculos.EliminarVehiculo(placaEliminar);
                    break;

                case 6:
                    Console.WriteLine("Saliendo...");
                    break;

                default:
                    Console.WriteLine("Opción no válida.");
                    break;
            }
        } while (opcion != 6);
    }
}
